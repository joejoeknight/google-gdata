<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.GData.Health</name>
    </assembly>
    <members>
        <member name="T:Google.GData.Health.HealthService">
            <summary>
            The YouTube Data API allows applications to perform functions normally 
            executed on the YouTube website. The API enables your application to search 
            for YouTube videos and to retrieve standard video feeds, comments and video
            responses. 
            In addition, the API lets your application upload videos to YouTube or 
            update existing videos. Your can also retrieve playlists, subscriptions, 
            user profiles and more. Finally, your application can submit 
            authenticated requests to enable users to create playlists, 
            subscriptions, contacts and other account-specific entities.
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthService.ServiceName">
            <summary>The Calendar service's name</summary> 
        </member>
        <member name="M:Google.GData.Health.HealthService.#ctor(System.String)">
            <summary>
            default constructor
            </summary>
            <param name="applicationName"></param>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Health.HealthService.Query(Google.GData.Health.HealthQuery)">
            <summary>
            overloaded to create typed version of Query
            </summary>
            <param name="feedQuery"></param>
            <returns>EventFeed</returns>
        </member>
        <member name="M:Google.GData.Health.HealthService.OnNewFeed(System.Object,Google.GData.Client.ServiceEventArgs)">
            <summary>eventchaining. We catch this by from the base service, which 
            would not by default create an atomFeed</summary> 
            <param name="sender"> the object which send the event</param>
            <param name="e">FeedParserEventArguments, holds the feedentry</param> 
            <returns> </returns>
        </member>
        <member name="T:Google.GData.Health.HealthFeed">
            <summary>
            The YouTube Data API allows applications to perform functions normally 
            executed on the YouTube website. The API enables your application to search 
            for YouTube videos and to retrieve standard video feeds, comments and video
            responses. 
            In addition, the API lets your application upload videos to YouTube or 
            update existing videos. Your can also retrieve playlists, subscriptions, 
            user profiles and more. Finally, your application can submit 
            authenticated requests to enable users to create playlists, 
            subscriptions, contacts and other account-specific entities.
            </summary>
        </member>
        <member name="M:Google.GData.Health.HealthFeed.#ctor(System.Uri,Google.GData.Client.IService)">
            <summary>
             default constructor
            </summary>
            <param name="uriBase">the base URI of the feedEntry</param>
            <param name="iService">the Service to use</param>
        </member>
        <member name="M:Google.GData.Health.HealthFeed.CreateFeedEntry">
            <summary>
            this needs to get implemented by subclasses
            </summary>
            <returns>AtomEntry</returns>
        </member>
        <member name="M:Google.GData.Health.HealthFeed.HandleExtensionElements(Google.GData.Client.ExtensionElementEventArgs,Google.GData.Client.AtomFeedParser)">
            <summary>
            get's called after we already handled the custom entry, to handle all 
            other potential parsing tasks
            </summary>
            <param name="e"></param>
            <param name="parser">the atom feed parser used</param>
        </member>
        <member name="T:Google.GData.Health.HealthQuery">
            <summary>
            Google Health supports the following subset of Google Data API query parameters:
            q (only supported for the register feed)
            start-index
            max-results
            published-min
            published-max
            updated-min
            updated-max
            Google Health also supports the following additional parameters:
            Parameter	Meaning	             Notes
            /category	Category filter.     Refer to the Google Data documentation for usage 
                                            information and category queries for specifics about the
                                            Google Health implementation of this parameter.
                                            For example:
                    -/medication/{http://schemas.google.com/health/item}Lipitor max-results=10 will return the first 10 entries for the medication Lipitor.
            digest=true May only be used on the profile feed. Returns content as an aggregation of all entries into a single CCR entry, 
                        which contains the collection of enclosed entries.
                        Refer to Digest parameter for usage information.
                        The default value is digest=false. You may set this to true or false.
                        For example: http://www.google.com/health/feeds/profile/default?digest=true will return a digest version of the profile feed.
            grouped=true    Returns a count of results per group. The default value is grouped=false. You may set this to true or false.
                            For example: ?grouped=true&amp;max-results-in-group=50 will return the first 50 records for each group.
                            ?grouped=true&amp;max-results-in-group=1 will return the top record for each group (which, incidentally, would be the profile summary query.)
            max-results-group   Specifies the maximum number of groups to be retrieved. Must be an integer value greater than zero.
                                This parameter is only valid if grouped=true.
            For example: 
                /feeds/profile/default/-medications?grouped=true&amp;max-results-in-group=2&amp;max-results-group=10 will return the top 10 medications with up to 2 items each.
                /feeds/profile/default/-medications?grouped=true&amp;max-results-in-group=2&amp;max-results-group=10&amp;max-results=3 will 
                    return the top 10 medications with up to 2 items each, but no more than 3 total results.
            max-results-in-group    Specifies the maximum number of records to be retrieved from each group. 
                                    The limits that you specify with this parameter apply to all groups.
                                    Must be an integer value greater than zero.
                                    This parameter is only valid if grouped=true.
                                    For example:
                /feeds/profile/default/-medications?grouped=true&amp;max-results-in-group=2&amp;max-results-group=10 will return the top 10 medications with up to 2 items each.
                /feeds/profile/default/-medications?grouped=true&amp;max-results-in-group=2&amp;max-results-group=10&amp;max-results=3 will return the top 10 medications with up to 2 items each, but no more than 3 total results.
            start-index-group   Retrieves only items whose group ranking is at least start-index-group. 
                                This should be set to a 1-based index of the first group to be retrieved. The range is applied per category.
                                This parameter is only valid if grouped=false.
            For example:
                    ?grouped=true&amp;start-index-group=43 will return items from groups 44 and higher.
            start-index-in-group     Is a 1-based index of the records to be retrieved from each group
                                        This parameter is only valid if grouped=false.
            For example:
                    ?grouped=true&amp;start-index-in-group=2 will skip the first item of each group.
            
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthQuery.HealthFeeds">
            <summary>
            starting url template for health feeds
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthQuery.AuthSubRegisterFeed">
            <summary>
            the register feed used with AuthSub authentication
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthQuery.AuthSubProfileFeed">
            <summary>
            the register feed used with AuthSub authentication
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthQuery.RegisterFeed">
            <summary>
            the register feed used with client login authentication, note that this
            requires the profile id to be appended
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthQuery.ProfileFeed">
            <summary>
            the register feed used with client login authentication, note that this
            requires the profile id to be appended
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthQuery.ProfileListFeed">
            <summary>
            feed url to retrieve a list of profiles, this is a basic atom feed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Health.HealthQuery.#ctor">
            <summary>
             base constructor
             </summary>
        </member>
        <member name="M:Google.GData.Health.HealthQuery.#ctor(System.String)">
            <summary>
            base constructor, with initial queryUri
            </summary>
            <param name="queryUri">the query to use</param>
        </member>
        <member name="M:Google.GData.Health.HealthQuery.RegisterQueryForId(System.String)">
            <summary>
            returns a HealthQuery for the Register UI feed for a given profileID
            </summary>
            <param name="profileId"></param>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Health.HealthQuery.ProfileQueryForId(System.String)">
            <summary>
            returns a HealthQuery for the Profile UI feed for a given profileID
            </summary>
            <param name="profileId"></param>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Health.HealthQuery.CalculateQuery(System.String)">
            <summary>Creates the partial URI query string based on all
             set properties.</summary> 
            <returns> string => the query part of the URI </returns>
        </member>
        <member name="P:Google.GData.Health.HealthQuery.Digest">
            <summary>May only be used on the profile feed.
            Returns content as an aggregation of all entries into a single CCR entry, 
            which contains the collection of enclosed entries. Default is false</summary> 
            <returns> </returns>
        </member>
        <member name="P:Google.GData.Health.HealthQuery.Grouped">
            <summary>Returns a count of results per group.
            The default value false</summary> 
            <returns> </returns>
        </member>
        <member name="P:Google.GData.Health.HealthQuery.NumberOfGroups">
            <summary>Specifies the maximum number of groups to be retrieved.
            Must be an integer value greater than zero.
            This parameter is only valid if Grouped is true</summary> 
            <returns> </returns>
        </member>
        <member name="P:Google.GData.Health.HealthQuery.GroupSize">
            <summary>Specifies the maximum number of records to be retrieved from each group.
            The limits that you specify with this parameter apply to all groups.
            Must be an integer value greater than zero.
            This parameter is only valid if grouped=true</summary> 
            <returns> </returns>
        </member>
        <member name="P:Google.GData.Health.HealthQuery.GroupStart">
            <summary>Retrieves only items whose group ranking is at least start-index-group. 
            This should be set to a 1-based index of the first group to be retrieved. 
            The range is applied per category. This parameter is only valid if 
            grouped=true</summary> 
            <returns> </returns>
        </member>
        <member name="P:Google.GData.Health.HealthQuery.StartInGroup">
            <summary>Is a 1-based index of the records to be retrieved from each group
            This parameter is only valid if grouped=true
            </summary> 
            <returns> </returns>
        </member>
        <member name="T:Google.GData.Health.HealthNameTable">
            <summary>
             contains the static strings for the health namespace
            </summary>
            <returns></returns>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.CCR">
            <summary> Continuity of Care Record namespace (CCR) namespace</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.CCR_PREFIX">
            <summary> Continuity of Care Record namespace (CCR) namespace prefix</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.CCR_ALIAS">
            <summary> Continuity of Care Record namespace (CCR) namespace alias</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.ContinuityOfCareElement">
            <summary>
            the CCR element name
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9">
            <summary> The h9 namespace (H9) namespace</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9_PREFIX">
            <summary> The h9 namespace (H9) namespace prefix</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9_ALIAS">
            <summary> The h9 namespace (H9) namespace alias</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9KINDS">
            <summary> The h9kinds namespace (H9KINDS) namespace</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9KINDS_PREFIX">
            <summary> The h9kinds namespace (H9KINDS) namespace prefix</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9PROFILE">
            <summary>the term for a profile entry</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9REGISTER">
            <summary>the term for a registry entry</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9KINDS_ALIAS">
            <summary> The h9kinds namespace (H9KINDS) namespace alias</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9M">
            <summary> The h9 metadata namespace (H9M) namespace</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9M_PREFIX">
            <summary> The h9 metadata namespace (H9M) namespace prefix</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.H9M_ALIAS">
            <summary> The h9 metadata namespace (H9M) namespace alias</summary>
        </member>
        <member name="F:Google.GData.Health.HealthNameTable.REL_COMPLETE_URL">
            <summary> Link Rel for a complete url of an entry, indicating the smallest feed
            containing the entry.</summary>
        </member>
        <member name="T:Google.GData.Health.HealthEntry">
            <summary>
            Entry API customization class for defining entries in an Event feed.
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthEntry.PROFILE_CATEGORY">
            <summary>
            Category used to label entries that contain photo extension data.
            </summary>
        </member>
        <member name="F:Google.GData.Health.HealthEntry.REGISTER_CATEGORY">
            <summary>
            Category used to label entries that contain photo extension data.
            </summary>
        </member>
        <member name="M:Google.GData.Health.HealthEntry.#ctor">
            <summary>
            Constructs a new HealthEntry instance with the appropriate category
            to indicate that it is an Health Entry.
            </summary>
        </member>
        <member name="P:Google.GData.Health.HealthEntry.IsProfile">
            <summary>
            returns true if the entry is a profile entry
            </summary>
        </member>
        <member name="P:Google.GData.Health.HealthEntry.IsRegister">
            <summary>
            returns true if the entry is a register entry
            </summary>
        </member>
        <member name="P:Google.GData.Health.HealthEntry.CCR">
            <summary>
            get/sets the CCR node inside the extensions collection. If you want to find specific nodes
            inside that CCR node, you need to use xpath with namespaces. That looks like this:
            <code>
            xmlDocument = new XmlDocument();
            xmlDocument.ImportNode(healthEntry.CCR);
            ccrNameManager = new XmlNamespaceManager(xmlDocument.NameTable);
            ccrNameManager.AddNamespace("ccr", "urn:astm-org:CCR");
            xmlNode node = xmlDocument.CCR.SelectSingleNode("//ccr:ProductName/ccr:Text", ccrNameManager);
            </code>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Google.GData.Health.ProfileEntry">
            <summary>
            shallow subclass to add the appropriate category for construction
            </summary>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Health.ProfileEntry.#ctor">
            <summary>
            Constructs a new ProfileEntry instance with the appropriate category
            to indicate that it is an event.
            </summary>
        </member>
        <member name="T:Google.GData.Health.RegisterEntry">
            <summary>
            shallow subclass to add the appropriate category for construction
            </summary>
            <returns></returns>
        </member>
        <member name="M:Google.GData.Health.RegisterEntry.#ctor">
            <summary>
            Constructs a new RegisterEntry instance with the appropriate category
            to indicate that it is an event.
            </summary>
        </member>
    </members>
</doc>
